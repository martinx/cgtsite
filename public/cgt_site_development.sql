/*
MySQL Data Transfer
Source Host: localhost
Source Database: cgt_site_development
Target Host: localhost
Target Database: cgt_site_development
Date: 2008-12-3 20:04:53
*/

SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for clients
-- ----------------------------
DROP TABLE IF EXISTS `clients`;
CREATE TABLE `clients` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cl_name` varchar(255) DEFAULT NULL,
  `cl_desc` text,
  `content_type` varchar(255) DEFAULT NULL,
  `filename` varchar(255) DEFAULT NULL,
  `size` int(11) DEFAULT NULL,
  `width` int(11) DEFAULT NULL,
  `height` int(11) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Table structure for events
-- ----------------------------
DROP TABLE IF EXISTS `events`;
CREATE TABLE `events` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ev_title` varchar(255) DEFAULT NULL,
  `ev_desc` text,
  `ev_author` varchar(255) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Table structure for partners
-- ----------------------------
DROP TABLE IF EXISTS `partners`;
CREATE TABLE `partners` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `pa_name` varchar(255) DEFAULT NULL,
  `pa_desc` text,
  `pa_url` varchar(255) DEFAULT NULL,
  `content_type` varchar(255) DEFAULT NULL,
  `filename` varchar(255) DEFAULT NULL,
  `size` int(11) DEFAULT NULL,
  `width` int(11) DEFAULT NULL,
  `height` int(11) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Table structure for schema_migrations
-- ----------------------------
DROP TABLE IF EXISTS `schema_migrations`;
CREATE TABLE `schema_migrations` (
  `version` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Table structure for service_comments
-- ----------------------------
DROP TABLE IF EXISTS `service_comments`;
CREATE TABLE `service_comments` (
  `sc_desc` text,
  `id` int(11) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Table structure for service_types
-- ----------------------------
DROP TABLE IF EXISTS `service_types`;
CREATE TABLE `service_types` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `st_name` varchar(255) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `st_desc` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Table structure for services
-- ----------------------------
DROP TABLE IF EXISTS `services`;
CREATE TABLE `services` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `sl_title` varchar(255) DEFAULT NULL,
  `sl_content` text,
  `sl_author` varchar(255) DEFAULT NULL,
  `sl_year` varchar(255) DEFAULT NULL,
  `service_type_id` int(11) DEFAULT NULL,
  `created_at` datetime DEFAULT NULL,
  `updated_at` datetime DEFAULT NULL,
  `client_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records 
-- ----------------------------
INSERT INTO `clients` VALUES ('1', 'realrock', 'Mike\'s RealRock Website - it collects Mike\'s songs and information', 'image/gif', 'clients-logo-01.gif', '2638', '60', '50', '2008-12-03 02:48:55', '2008-12-03 11:51:24');
INSERT INTO `clients` VALUES ('2', 'jcornett', 'JCornett & Associates\' main goal is to assist local businesses and individuals to resolve their PC based data systems and networking needs with speed and professionalism.', 'image/gif', 'clients-logo-02.gif', '2185', '60', '50', '2008-12-03 02:52:05', '2008-12-03 11:51:32');
INSERT INTO `clients` VALUES ('3', 'Solr Plugin', 'This plugin adds full text search capabilities using Solr to any Rails model.\r\n\r\n', 'image/gif', 'clients-logo-03.gif', '2807', '60', '50', '2008-12-03 02:52:47', '2008-12-03 11:52:47');
INSERT INTO `events` VALUES ('1', 'CGT will co-organizes the \"A History RnR\" Show in China.', '<p><span style=\"font-size: medium\">&nbsp;&nbsp;&nbsp; Applications on the Web are under constant attack. Rails applications are not exempt from this onslaught.next is the video .</span></p>\r\n<div id=\"player778771-parent\" style=\"text-align: center\">\r\n<div style=\"background-position: center 50%; background-image: url(/javascripts/fckeditor/editor/plugins/flvPlayer/flvPlayer.gif); overflow: hidden; width: 600px; border-top-style: none; background-repeat: no-repeat; border-right-style: none; border-left-style: none; height: 400px; background-color: rgb(220,220,220); border-bottom-style: none\"><script src=\"/javascripts/fckeditor/editor/plugins/flvPlayer/swfobject.js\" type=\"text/javascript\"></script>\r\n<div id=\"player778771\"><a href=\"http://www.macromedia.com/go/getflashplayer\">Get the Flash Player</a> to see this player.\r\n<div id=\"player778771-config\" style=\"display: none; visibility: hidden; overflow: hidden; width: 0px; height: 0px\">url=/uploads/Flash/testing.flv width=600 height=400 loop=false play=false downloadable=false fullscreen=true displayNavigation=true displayDigits=true playlistThumbs=false</div>\r\n</div>\r\n<script type=\"text/javascript\">\r\n	var s1 = new SWFObject(\"/javascripts/fckeditor/editor/plugins/flvPlayer/mediaplayer.swf\",\"single\",\"600\",\"400\",\"7\");\r\n	s1.addVariable(\"width\",\"600\");\r\n	s1.addVariable(\"height\",\"400\");\r\n	s1.addVariable(\"autostart\",\"false\");\r\n	s1.addVariable(\"file\",\"/uploads/Flash/testing.flv\");\r\n	s1.addVariable(\"repeat\",\"false\");\r\n	s1.addVariable(\"image\",\"\");\r\n	s1.addVariable(\"showdownload\",\"false\");\r\n	s1.addVariable(\"link\",\"/uploads/Flash/testing.flv\");\r\n	s1.addParam(\"allowfullscreen\",\"true\");\r\n	s1.addVariable(\"showdigits\",\"true\");\r\n	s1.addVariable(\"shownavigation\",\"true\");\r\n	s1.addVariable(\"logo\",\"\");\r\n	s1.write(\"player778771\");\r\n</script></div>\r\n</div>\r\n<p><span style=\"font-size: medium\">&nbsp;&nbsp;&nbsp; Security is a big topic&mdash;the subject of whole books. We can&rsquo;t do it justice in just one chapter. You&rsquo;ll probably want to do some research before you put your applications on the scary, mean &rsquo;net. A good place to start reading about security is the Open Web Application Security Project (OWASP), on the Web at http://www.owasp.org . It&rsquo;s a group of volunteers who put together &ldquo;free, professionalquality,open-source documentation, tools, and standards&rdquo; related to security.Be sure to check out their top-10 list of security issues in web applications.If you follow a few basic guidelines, you can make your Rails application a lot more secure.</span></p>\r\n<p><span style=\"font-size: medium\">&nbsp;&nbsp;&nbsp; SQL injection is the number-one security problem in many web applications.So, what is SQL injection, and how does it work?Let&rsquo;s say a web application takes strings from unreliable sources (such as the data from web form fields) and uses these strings directly in SQL statements. If the application doesn&rsquo;t correctly quote any SQL metacharacters (such as backslashes or single quotes), an attacker can take control of the SQL executed on your server, making it return sensitive data, create records with invalid data, or even execute arbitrary SQL statements.</span></p>\r\n<p style=\"text-align: center\"><span style=\"font-size: medium\"><img height=\"435\" alt=\"testing\" width=\"570\" align=\"middle\" src=\"/uploads/Image/U1335P27T1D495479F318DT20080416081324.jpg\" /></span></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size: medium\">&nbsp;&nbsp;&nbsp; Pagination is extremely important in any web application. Let&rsquo;s say a client has a database with 10,000 cars for sale. You, the intrepid web developer, are hired to build a web front end to the database. You would never want to return a list of all 10,000 cars at once! When the web browser finished displaying the list (several days later), the user&rsquo;s eyes would either glaze over from information overload or be left scrolling down the page for miles.</span></p>', 'lin', '2008-11-28 16:21:14', '2008-11-29 05:52:12');
INSERT INTO `events` VALUES ('2', ' The Co-Founder Cornett performanced in the music show of Seattle', '<p><span style=\"font-size: medium\">&nbsp;&nbsp;&nbsp; Instead you would opt for a more sensible approach and only return a subset of the list to the user&mdash;a &ldquo;page&rdquo;. The first page of results might have just 30 cars on it and include a link to the next page. That page would have another 30 cars listed and a link to both the next page and previous page. Or you might decide to show a list of all pages with links to allow the user to skip around. You would probably include a description on the page to communicate what part of the subset a user is viewing (e.g. &ldquo;Page 1 of 20&Prime; or &ldquo;Cars 1-30 out of 10,000&Prime;). That is pagination.</span></p>\r\n<p style=\"text-align: center\"><img height=\"382\" alt=\"\" width=\"570\" src=\"/uploads/Image/U2142P27T1D495479F3DT20080416080853.jpg\" /></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size: medium\">&nbsp;&nbsp;&nbsp; Google provides a good example of pagination. Search for any word. Look at the top of the page and you&rsquo;ll see the description of the page results &ldquo;Results 1 - 10 of about 1,000,000 for&hellip;&rdquo;. Look at the bottom of the page and you&rsquo;ll see &ldquo;1 2 3 4 &hellip; Next&rdquo; underneath the expanding o&rsquo;s in Google. This isn&rsquo;t the only way to navigate paginated pages, but it illustrates the concept clearly.</span></p>', 'lin', '2008-11-29 05:55:44', '2008-11-29 05:56:05');
INSERT INTO `events` VALUES ('3', ' Gao starts to build development environment of Ruby and Rails.', '<p><span style=\"font-size: medium\">After the jump, I&rsquo;ll demonstrate three different techniques for performing pagination on database records in Ruby on Rails.</span></p>\r\n<p>&nbsp;</p>\r\n<h3><span style=\"font-size: medium\">Pagination Overview</span></h3>\r\n<p><span style=\"font-size: medium\">Any paginated web page, regardless of the technology behind it, requires two sets of information&mdash;a subset of records and information about the complete set of records. The subset will be the &ldquo;current page&rdquo; and those records will be displayed in the browser page (usually in either a list or a grid). The information about the total set provides useful information, such as &ldquo;You are viewing page 2 out of 7&Prime; or &ldquo;Displaying records 40-60 out of 100&Prime;, as well as navigation links to the other pages.</span></p>\r\n<p><span style=\"font-size: medium\">In Ruby on Rails, there are three ways to do pagination:</span></p>\r\n<ul>\r\n    <li><span style=\"font-size: medium\">1. Simple pagination </span></li>\r\n    <li><span style=\"font-size: medium\">2. Custom pagination </span></li>\r\n    <li><span style=\"font-size: medium\">3. Plug-in pagination</span></li>\r\n</ul>\r\n<p><span style=\"font-size: medium\">Pagination will always take place in the Controller, where you&rsquo;ll both find the records in the database to display and determine the pagination information. The View will take care of displaying the results of the pagination, but the heavy lifting will already be done. For that reason, let&rsquo;s hold off on looking at how to display pagination results in the View until we&rsquo;ve examined the first two types of Rails pagination.</span></p>', 'lin', '2008-11-29 06:02:57', '2008-11-29 06:02:57');
INSERT INTO `events` VALUES ('4', ' Cooperative Global Technologies, LLC is created in USA in March, 2008.', '<h3><span style=\"font-size: medium\">1. Simple Pagination</span></h3>\r\n<p><span style=\"font-size: medium\">Simple pagination is built into Rails via the </span><a href=\"http://api.rubyonrails.org/classes/ActionController/Pagination.html\" target=\"_blank\"><span style=\"font-size: medium\"><font color=\"#336699\">Pagination module</font></span></a><span style=\"font-size: medium\">. In simple cases, it can do the job for you. Scaffolding uses it. The </span><span class=\"code\"><a href=\"http://api.rubyonrails.org/classes/ActionController/Pagination.html#M000130\" target=\"_blank\"><span style=\"font-size: medium\"><font color=\"#336699\">paginate</font></span></a></span><span style=\"font-size: medium\"> method performs both the find and the pagination in one step.</span></p>\r\n<div class=\"codecolorer-container ruby\">\r\n<div class=\"codecolorer\" style=\"font-family: monospace\"><span style=\"font-size: medium\"><span class=\"kw1\">def</span> list<br />\r\n<span class=\"re1\">@car_pages</span>, <span class=\"re1\">@cars</span> = paginate<span class=\"br0\">(</span><span class=\"re3\">:cars</span>,<br />\r\n<span class=\"re3\">:conditions</span> =&gt; <span class=\"st0\">\'available = 1\'</span>, <span class=\"re3\">:order</span> =&gt; <span class=\"st0\">\'price DESC\'</span>, <span class=\"re3\">:per_page</span> =&gt; <span class=\"nu0\">20</span><span class=\"br0\">)</span><br />\r\n<span class=\"kw1\">end</span></span></div>\r\n</div>\r\n<p><span style=\"font-size: medium\"><span class=\"code\">Paginate</span> takes a collection id as it&rsquo;s first argument. The collection id is basically the plural, lowercase form of the Model name. In this case, it will be looking for a Model called &ldquo;Car&rdquo;. After the first argument, <span class=\"code\">paginate</span> takes a list of options. Most of those options are ones that can be passed to the <span class=\"code\">find</span> method (<span class=\"code\">:include, :joins, :conditions, :order, :select</span>) and that&rsquo;s because <span class=\"code\">paginate</span> is going to use </span><a href=\"http://api.rubyonrails.org/classes/ActiveRecord/Base.html#M000992\" target=\"_blank\"><span style=\"font-size: medium\"><font color=\"#336699\">Model.find(:all, *args)</font></span></a><span style=\"font-size: medium\"> to retrieve the records.</span></p>', 'lin', '2008-11-29 06:04:00', '2008-11-29 06:04:00');
INSERT INTO `events` VALUES ('5', ' Gao initiates Entertainment SW and Services for CGT in China. ', '<p><span style=\"font-size: medium\">There is one key difference: <span class=\"code\">paginate</span> doesn&rsquo;t accept <span class=\"code\">:limit</span> or <span class=\"code\">:offset</span> as options, two ways to communicate to the database which subset of records to return. That&rsquo;s because <span class=\"code\">paginate</span> is going to determine those values itself using the <span class=\"code\">:per_page</span> option and the value of <span class=\"code\">params[:page]</span>. (<em>Important Note:</em> <span class=\"code\">params[:page]</span> is not passed as an argument to <span class=\"code\">paginate</span> but pulled from the global parameters.) It makes sense that <span class=\"code\">params[:page]</span> is the current page of records to show. <span class=\"code\">:limit</span>, or how many records to retrieve, is determined by <span class=\"code\">:per_page</span>. <span class=\"code\">:offset</span>, which dictates the starting record for retrieval is calculated as <span class=\"code\">((params[:page] - 1) * :per_page)</span>.</span></p>\r\n<p><span style=\"font-size: medium\"><span class=\"code\">Paginate</span> also does two other things besides find the records. It gets a count of all the records, similar to </span><a href=\"http://api.rubyonrails.org/classes/ActiveRecord/Calculations/ClassMethods.html#M000951\" target=\"_blank\"><span style=\"font-size: medium\"><font color=\"#336699\">Model.count(*args)</font></span></a><span style=\"font-size: medium\">, and it creates a Paginator object that we can use in the View. The Paginator object keeps track of all the pagination information&mdash;the total record count, the current page, how many records on this page, the total number of pages, information about the next and previous pages, etc. I&rsquo;ll show you how to work with the Paginator object when we talk about the View.</span></p>\r\n<p><span style=\"font-size: medium\">Once it is done, <span class=\"code\">paginate</span> returns two items: the paginator object and a collection of the items on the current page. Because the method returns two values, it uses the double assignment syntax <span class=\"code\">(x, y = paginate(z))</span>. Don&rsquo;t let that confuse you if you haven&rsquo;t seen double assignment before.</span></p>\r\n<div class=\"codecolorer-container ruby\">\r\n<div class=\"codecolorer\" style=\"font-family: monospace\"><span style=\"font-size: medium\"><span class=\"co1\"># Example of double assignment syntax</span><br />\r\n<span class=\"kw1\">def</span> add_and_subtract<span class=\"br0\">(</span> value1, value2 <span class=\"br0\">)</span><br />\r\nadd = value1 + value2<br />\r\nsubtract = value1 - value2<br />\r\n<span class=\"kw2\">return</span> add, subtract<br />\r\n<span class=\"kw1\">end</span><br />\r\n<br />\r\nvar1, var2 = add_and_subtract<span class=\"br0\">(</span><span class=\"nu0\">10</span>, <span class=\"nu0\">4</span><span class=\"br0\">)</span><br />\r\n<br />\r\n<span class=\"co1\"># var1 will be 14 and var2 will be 6.</span></span></div>\r\n</div>', 'lin', '2008-11-29 06:04:52', '2008-11-29 06:04:52');
INSERT INTO `events` VALUES ('6', 'Cornett negotiates with American entities to develop websites through Chinese partners. ', '<p><span style=\"font-size: medium\">After the <span class=\"code\">paginate</span> method has made its double assignment to two instance variables, the View will be able to use them. In our example, @cars will be the collection of database records that is appropriate for this page. You can simply loop through the collection to display them, just like you would if you weren&rsquo;t doing pagination. @car_pages will be an instance of the Paginator.</span></p>\r\n<h3><span style=\"font-size: medium\">2. Custom pagination</span></h3>\r\n<p><span style=\"font-size: medium\">If you find that the <span class=\"code\">paginate</span> method doesn&rsquo;t do everything you need, you can easily build your own custom pagination. Maybe your find is complex, maybe you are using find_by_sql, or maybe you want to add more bells and whistles. Luckily creating your own isn&rsquo;t much more difficult than using the <span class=\"code\">paginate</span> method.</span></p>\r\n<p><span style=\"font-size: medium\">Like the <span class=\"code\">paginate</span> method, you&rsquo;ll just need to determine the total number of items in the found set, the number of items per page, and the current page. Then you will be able to find the records and create a Paginator object.</span></p>\r\n<p><span style=\"font-size: medium\">Here you&rsquo;ll also want to make a choice. Will it be more efficient for you to find ALL the matching records, count them, then display just a page of the found set? Or will it be more efficient to make two calls to the database: 1) an SQL COUNT of records that would match, 2) a find of only the current records being shown on the current page. The first approach will only hit your SQL database once, but will get a lot of information during that trip. The second approach will hit your SQL database twice, but will return two smaller pieces of information on each trip. (The <span class=\"code\">paginate</span> method uses the second approach.)</span></p>', 'lin', '2008-11-29 06:05:42', '2008-11-29 06:05:42');
INSERT INTO `events` VALUES ('7', ' Founders met Chinese partners to sign Cooperative Agreements in Jan. 2008. ', '<p><span style=\"font-size: medium\">The first is quicker to code but really only suitable for very small data sets. The second more robust and scalable. If I am <em>certain</em> that a table will never have more than 100 records in it, I use the first one. If the table could grow to eventually hold thousands of records, I use the second one.</span></p>\r\n<p><span style=\"font-size: medium\">Here&rsquo;s the single-trip technique.</span></p>\r\n<div class=\"codecolorer-container ruby\">\r\n<div class=\"codecolorer\" style=\"font-family: monospace\"><span style=\"font-size: medium\"><span class=\"co1\"># Custom pagination in four easy steps, 1 SQL call</span><br />\r\n<span class=\"kw1\">def</span> list<br />\r\n<span class=\"co1\"># step 1: set the variables you\'ll need</span><br />\r\npage = <span class=\"br0\">(</span>params<span class=\"br0\">[</span><span class=\"re3\">:page</span><span class=\"br0\">]</span> ||= <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">to_i</span><br />\r\nitems_per_page = <span class=\"nu0\">20</span><br />\r\noffset = <span class=\"br0\">(</span>page - <span class=\"nu0\">1</span><span class=\"br0\">)</span> * items_per_page<br />\r\n<br />\r\n<span class=\"co1\"># step 2: do your custom find without doing any kind of limits or offsets</span><br />\r\n<span class=\"co1\"># i.e. get everything on every page, don\'t worry about pagination yet</span><br />\r\n<span class=\"re1\">@items</span> = Item.<span class=\"me1\">find_with_some_custom_method</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br />\r\n<br />\r\n<span class=\"co1\"># step 3: create a Paginator, the second argument has to be the number of ALL items on all pages</span><br />\r\n<span class=\"re1\">@item_pages</span> = Paginator.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>, <span class=\"re1\">@items</span>.<span class=\"me1\">length</span>, items_per_page, page<span class=\"br0\">)</span><br />\r\n<br />\r\n<span class=\"co1\"># step 4: only make a subset of @items available to the view</span><br />\r\n<span class=\"re1\">@items</span> = <span class=\"re1\">@items</span><span class=\"br0\">[</span>offset..<span class=\"me1\"><span class=\"br0\">(</span>offset</span> + items_per_page - <span class=\"nu0\">1</span><span class=\"br0\">)</span><span class=\"br0\">]</span><br />\r\n<span class=\"kw1\">end</span></span></div>\r\n</div>\r\n<p><span style=\"font-size: medium\">The two-trip method is almost as easy. You&rsquo;ll just need two SQL methods. In step 2 you do a count of the records that would match and then in step 4 you retrieve only the records for the current page. Keep in mind that &ldquo;offset&rdquo; and &ldquo;items_per_page&rdquo; will need to be passed to your custom find method as the :offset and :limit parameters. (<span class=\"code\">Paginate</span> does this by getting :limit from its :per_page option, and getting :offset by asking a Paginator object, like the one you create in step 3, to return <span class=\"code\">paginator.current.offset</span>. You could pass the paginator object (@item_pages) into your find method and do the same thing.)</span></p>', 'lin', '2008-11-29 06:06:34', '2008-11-29 06:06:34');
INSERT INTO `events` VALUES ('8', ' Co-Founder Cornett visited Beijing from Dec. 2007 to Jan. 2008. ', '<div class=\"codecolorer-container ruby\">\r\n<div class=\"codecolorer\" style=\"font-family: monospace\"><span style=\"font-size: medium\"><span class=\"co1\"># Custom pagination in four easy steps, 2 SQL calls (More robust!)</span><br />\r\n<span class=\"kw1\">def</span> list<br />\r\n<span class=\"co1\"># step 1: set the variables you\'ll need</span><br />\r\npage = <span class=\"br0\">(</span>params<span class=\"br0\">[</span><span class=\"re3\">:page</span><span class=\"br0\">]</span> ||= <span class=\"nu0\">1</span><span class=\"br0\">)</span>.<span class=\"me1\">to_i</span><br />\r\nitems_per_page = <span class=\"nu0\">20</span><br />\r\noffset = <span class=\"br0\">(</span>page - <span class=\"nu0\">1</span><span class=\"br0\">)</span> * items_per_page<br />\r\n<br />\r\n<span class=\"co1\"># step 2: instead of performing a find, just get a count</span><br />\r\nitem_count = Item.<span class=\"me1\">count_with_some_custom_method</span><span class=\"br0\">(</span><span class=\"br0\">)</span><br />\r\n<br />\r\n<span class=\"co1\"># step 3: create a Paginator, the second argument has to be the number of ALL items on all pages</span><br />\r\n<span class=\"re1\">@item_pages</span> = Paginator.<span class=\"me1\">new</span><span class=\"br0\">(</span><span class=\"kw2\">self</span>, item_count, items_per_page, page<span class=\"br0\">)</span><br />\r\n<br />\r\n<span class=\"co1\"># step 4: only find the requested subset of @items</span><br />\r\n<span class=\"re1\">@items</span> = Item.<span class=\"me1\">find_with_some_custom_method</span><span class=\"br0\">(</span>items_per_page, offset<span class=\"br0\">)</span><br />\r\n<span class=\"kw1\">end</span></span></div>\r\n</div>\r\n<p><span style=\"font-size: medium\">Just like with simple pagination, both methods above result in a collection (@items) and a Paginator object (@item_pages). You can loop through the collection to display the current page of items, and you can use the Paginator object in the View to get information about the pagination.</span></p>', 'lin', '2008-11-29 06:07:20', '2008-11-29 06:07:20');
INSERT INTO `events` VALUES ('9', ' Founders visited Tianjin Jingming Electronic Materials Co., Ltd. in Dec. 2007.', '<h3><span style=\"font-size: medium\">Pagination in the View</span></h3>\r\n<p><span style=\"font-size: medium\">Once your controller has assigned values to @item_pages (a Paginator instance) and @items (a collection of ActiveRecord objects), you are ready to utilize them in your view. It&rsquo;s not difficult to work with the Paginator object. There is a </span><a href=\"http://api.rubyonrails.org/classes/ActionView/Helpers/PaginationHelper.html#M000504\" target=\"_blank\"><span style=\"font-size: medium\"><font color=\"#336699\">Pagination Helper</font></span></a><span style=\"font-size: medium\"> which can output all the page links for you.</span></p>\r\n<div class=\"codecolorer-container ruby\" style=\"height: 35px\">\r\n<div class=\"codecolorer\" style=\"font-family: monospace\"><span style=\"font-size: medium\"><!--pagination_links<span class=\"br0\">(</span>@item_pages<span class=\"br0\">)</span>--></span></div>\r\n</div>\r\n<p><span style=\"font-size: medium\">Or you can just as easily write your own links. It is not much harder and it is more flexible. Here&rsquo;s are some simple examples of how to do it for yourself.</span></p>\r\n<div class=\"codecolorer-container ruby\">\r\n<div class=\"codecolorer\" style=\"font-family: monospace\"><span style=\"font-size: medium\"><span class=\"co1\"># Previous and Next Links</span><br />\r\n<span class=\"co1\"># @items_pages.current is the current page being displayed by the pagination</span><br />\r\n<br />\r\n<span class=\"co1\"># show a previous link if there is a previous page from the current page</span><br />\r\n<!--link_to<span class=\"br0\">(</span><span class=\"st0\">\'previous\'</span>,<br  />\r\n<span class=\"re3\">:page</span> => <span class=\"re1\">@item_pages</span>.<span class=\"me1\">current</span>.<span class=\"me1\">previous</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re1\">@item_pages</span>.<span class=\"me1\">current</span>.<span class=\"me1\">previous</span>--><br />\r\n<br />\r\n<span class=\"co1\"># show a next link if there is a next page from the current page</span><br />\r\n<!--link_to<span class=\"br0\">(</span><span class=\"st0\">\'next\'</span>,<br  />\r\n<span class=\"re3\">:page</span> => <span class=\"re1\">@item_pages</span>.<span class=\"me1\">current</span>.<span class=\"kw1\">next</span><span class=\"br0\">)</span> <span class=\"kw1\">if</span> <span class=\"re1\">@item_pages</span>.<span class=\"me1\">current</span>.<span class=\"kw1\">next</span>--></span></div>\r\n</div>\r\n<p><span style=\"font-size: medium\">The one pitfall is to make sure that any other parameters you want to keep are also passed in the link. (You&rsquo;ll notice that the scaffold&rsquo;s pagination does not do this by default.)</span></p>\r\n<div class=\"codecolorer-container ruby\">\r\n<div class=\"codecolorer\" style=\"font-family: monospace\"><span style=\"font-size: medium\"><span class=\"co1\"># List of Page Numbers with Links</span><br />\r\nPages:<br />\r\n<!--span class=\"kw1\">for</span> page <span class=\"kw1\">in</span> <span class=\"re1\">@item_pages</span> --><br />\r\n<!--link_to_unless<span class=\"br0\">(</span><span class=\"br0\">(</span>params<span class=\"br0\">[</span><span class=\"re3\">:page</span><span class=\"br0\">]</span>.<span class=\"me1\">to_i</span> == page.<span class=\"me1\">number</span><span class=\"br0\">)</span>,<br  />\r\npage.<span class=\"me1\">number</span>, <span class=\"re3\">:page</span> => page<span class=\"br0\">)</span>--><br />\r\n<!--span class=\"kw1\">end</span> --></span></div>\r\n</div>\r\n<div class=\"codecolorer-container ruby\">\r\n<div class=\"codecolorer\" style=\"font-family: monospace\"><span style=\"font-size: medium\"><span class=\"co1\"># Information about the full set and subset of records</span><br />\r\nDisplaying <!--<span class=\"re1\">@item_pages</span>.<span class=\"me1\">current_page</span>.<span class=\"me1\">first_item</span>--><br />\r\nthrough <!--<span class=\"re1\">@item_pages</span>.<span class=\"me1\">current_page</span>.<span class=\"me1\">last_item</span>--><br />\r\nof <!--<span class=\"re1\">@item_pages</span>.<span class=\"me1\">item_count</span>-->items.</span></div>\r\n</div>', 'lin', '2008-11-29 06:08:04', '2008-11-29 06:08:04');
INSERT INTO `events` VALUES ('10', ' Founders Cornett and Gao framed business plan in Beijing in Dec. 2007.', '<h3><span style=\"font-size: medium\">3. Plug-in pagination</span></h3>\r\n<p><span style=\"font-size: medium\">For a few months it seemed that built-in Pagination would be revised dramatically in the upcoming Rails 2.0, but that is no longer the case. Now all pagination will be moved into a plug-in and out of the core of Rails. There, the pagination techniques above, can compete with the plug-ins below. You&rsquo;ll be able to pick the one that is best for you.</span></p>\r\n<p><span style=\"font-size: medium\">There&rsquo;s nothing inherently wrong with the pagination built into Rails. I think if you understand it, it will work well for you. But some developers don&rsquo;t think pagination is as slick or elegant as it could be. Some of those developers have even gone one step further than custom pagination and reinvented pagination as a plug-in. Each offers different features, and each has loyal users who swear by them.</span></p>\r\n<ul>\r\n    <li><a href=\"http://cardboardrocket.com/2006/09/06/paginating-find-now-even-sexier/\" target=\"_blank\"><span style=\"font-size: medium\"><font color=\"#336699\">paginating_find</font></span></a></li>\r\n    <li><a href=\"http://paginator.rubyforge.org/\" target=\"_blank\"><span style=\"font-size: medium\"><font color=\"#336699\">paginator</font></span></a></li>\r\n    <li><a href=\"http://errtheblog.com/post/4791\" target=\"_blank\"><span style=\"font-size: medium\"><font color=\"#336699\">will_paginate</font></span></a></li>\r\n</ul>\r\n<p><span style=\"font-size: medium\">If you&rsquo;ve never used plug-ins before, the Rails Wiki has a good </span><a href=\"http://wiki.rubyonrails.com/rails/pages/Plugins\" target=\"_blank\"><span style=\"font-size: medium\"><font color=\"#336699\">plug-in introduction</font></span></a><span style=\"font-size: medium\"> to get you started.</span></p>', 'lin', '2008-11-29 06:08:45', '2008-11-29 06:08:45');
INSERT INTO `events` VALUES ('11', 'Restful Authentication with rails 2', '<p><span style=\"font-size: medium\">I recently had to build an authentication system into a project and seeing as the </span><a title=\"restful authentication plugin\" href=\"http://agilewebdevelopment.com/plugins/restful_authentication\"><span style=\"font-size: medium\">restful authentication plugin</span></a><span style=\"font-size: medium\"> was getting such buzz, I decided to try it out.</span></p>\r\n<p><span style=\"font-size: medium\">The problem was, most of the information I found on the internet was dated and I had to make a couple of changes to get it to work on Rails 2.0. </span><a href=\"http://technoweenie.stikipad.com/plugins/show/Acts+as+Authenticated\"><span style=\"font-size: medium\">This site</span></a><span style=\"font-size: medium\"> and </span><a href=\"http://www.railsforum.com/viewtopic.php?id=14216&amp;p=1\"><span style=\"font-size: medium\">this forum post</span></a><span style=\"font-size: medium\"> were really helpful. This post documents the steps I took (or rather, the steps I&rsquo;ll take next time I use it) to get the plugin working. It assumes you already have a rails application running and want to add authentication to it.</span></p>\r\n<ul>\r\n    <li class=\"tutorial-section\"><span style=\"font-size: medium\"><strong>Install the plug-in<br />\r\n    </strong>Open up a console window and navigate to the root of your application.<br />\r\n    Use script/plugin to install the plugin. </span>\r\n    <p>&nbsp;</p>\r\n    <div class=\"wp_syntax\" style=\"padding-bottom: 15px\">\r\n    <div class=\"code\">\r\n    <pre class=\"rails\"><span style=\"font-size: medium\">ruby script<span style=\"font-weight: bold; color: #006600\">/</span>plugin install http:<span style=\"font-weight: bold; color: #006600\">//</span>svn.<span style=\"color: #9900cc\">techno</span><span style=\"font-weight: bold; color: #006600\">-</span>weenie.<span style=\"color: #9900cc\">net</span><span style=\"font-weight: bold; color: #006600\">/</span>projects<span style=\"font-weight: bold; color: #006600\">/</span>plugins<span style=\"font-weight: bold; color: #006600\">/</span>restful_authentication<span style=\"font-weight: bold; color: #006600\">/</span></span></pre>\r\n    </div>\r\n    </div>\r\n    </li>\r\n    <li class=\"tutorial-section\"><span style=\"font-size: medium\"><strong>Run the generator<br />\r\n    </strong>The generator sets up your controllers, model, views and observer as well as modify the routes.rb file (sets up session and users as resources). The session controller is used for signing in and out of the system while the user controller takes care of the rest.If you <strong>do not</strong> need a user activation system built into the system, type the line below: </span>\r\n    <p>&nbsp;</p>\r\n    <div class=\"wp_syntax\" style=\"padding-bottom: 0px\">\r\n    <div class=\"code\">\r\n    <pre class=\"rails\"><span style=\"font-size: medium\">ruby script<span style=\"font-weight: bold; color: #006600\">/</span>generate authenticated user sessions</span></pre>\r\n    </div>\r\n    </div>\r\n    <p><span style=\"font-size: medium\">If you need a user account activation system, use the line below. The rest of this post will assume the system includes user activation (the system is a lot simpler without user activation enabled).</span></p>\r\n    <div class=\"wp_syntax\" style=\"padding-bottom: 0px\">\r\n    <div class=\"code\">\r\n    <pre class=\"rails\"><span style=\"font-size: medium\">ruby script<span style=\"font-weight: bold; color: #006600\">/</span>generate authenticated user sessions <span style=\"font-weight: bold; color: #006600\">--</span>include<span style=\"font-weight: bold; color: #006600\">-</span>activation</span></pre>\r\n    </div>\r\n    </div>\r\n    </li>\r\n</ul>', 'lin', '2008-11-29 06:10:20', '2008-11-29 06:10:20');
INSERT INTO `partners` VALUES ('1', 'realrock', 'Mike\'s RealRock Website - it collects Mike\'s songs and information', 'http://www.realrock.com/', 'image/gif', 'partners-logo-01.gif', '3500', '80', '60', '2008-11-25 13:54:01', '2008-11-25 13:54:01');
INSERT INTO `partners` VALUES ('2', 'jcornett', 'JCornett & Associates\' main goal is to assist local businesses and individuals to resolve their PC based data systems and networking needs with speed and professionalism. ', 'http://www.jcornett.com/', 'image/gif', 'partners-logo-02.gif', '3157', '80', '60', '2008-11-25 13:57:20', '2008-11-25 13:57:20');
INSERT INTO `partners` VALUES ('3', 'jcornett', 'Cornett & Associates\' main goal is to assist local businesses and individuals to resolve their PC based data systems and networking needs with speed and professionalism.  ', 'http://www.jcornett.com/', 'image/gif', 'partners-logo-03.gif', '2030', '50', '50', '2008-11-25 14:06:34', '2008-11-25 14:06:34');
INSERT INTO `schema_migrations` VALUES ('20081123100330');
INSERT INTO `schema_migrations` VALUES ('20081125133037');
INSERT INTO `service_comments` VALUES ('If you code this way, you don’t have to worry about metacharacters—all the security concerns are encapsulated down at a lower level within the model.You should ensure that this kind of model method cannot break anything,even if it is called with untrusted arguments.\r\nAlso remember that Rails automatically generates finder methods for you for all attributes in a model, and these finders are secure from SQL injection attacks. If you wanted to search for e-mails with a given owner and subject,you could simply use the Rails autogenerated method.\r\n', '1');
INSERT INTO `service_types` VALUES ('1', 'System Integrations', '2008-12-02 12:41:05', '2008-12-02 12:41:07', 'Applications on the Web are under constant attack. Rails applications are not exempt from this onslaught.\r\nSecurity is a big topic—the subject of whole books. We can’t do it justice in just one chapter. You’ll probably want to do some research before you put your applications on the scary, mean ’net. A good place to start reading about security is the Open Web Application Security Project (OWASP), on the Web at http://www.owasp.org . It’s a group of volunteers who put together “free, professionalquality,open-source documentation, tools, and standards” related to security.Be sure to check out their top-10 list of security issues in web applications.If you follow a few basic guidelines, you can make your Rails application a lot more secure.\r\nApplications on the Web are under constant attack. Rails applications are not exempt from this onslaught.\r\nSecurity is a big topic—the subject of whole books. We can’t do it justice in just one chapter. You’ll probably want to do some research before you put your applications on the scary, mean ’net. A good place to start reading about security is the Open Web Application Security Project (OWASP), on the Web at http://www.owasp.org . It’s a group of volunteers who put together “free, professionalquality,open-source documentation, tools, and standards” related to security.Be sure to check out their top-10 list of security issues in web applications.If you follow a few basic guidelines, you can make your Rails application a lot more secure.\r\nApplications on the Web are under constant attack. Rails applications are not exempt from this onslaught.\r\nSecurity is a big topic—the subject of whole books. We can’t do it justice in just one chapter. You’ll probably want to do some research before you put your applications on the scary, mean ’net. A good place to start reading about security is the Open Web Application Security Project (OWASP), on the Web at http://www.owasp.org . It’s a group of volunteers who put together “free, professionalquality,open-source documentation, tools, and standards” related to security.Be sure to check out their top-10 list of security issues in web applications.If you follow a few basic guidelines, you can make your Rails application a lot more secure.\r\n');
INSERT INTO `service_types` VALUES ('2', 'Software Development', '2008-12-02 12:41:28', '2008-12-02 12:41:30', '26.1 SQL Injection\r\nSQL injection is the number-one security problem in many web applications.So, what is SQL injection, and how does it work?\r\nLet’s say a web application takes strings from unreliable sources (such as the data from web form fields) and uses these strings directly in SQL statements. If the application doesn’t correctly quote any SQL metacharacters (such as backslashes or single quotes), an attacker can take control of the SQL executed on your server, making it return sensitive data, create records with invalid data, or even execute arbitrary SQL statements.\r\nImagine a web mail system with a search capability. The user could enter a string on a form, and the application would list all the e-mails with that string as a subject. Inside our application’s model there might be a query that looks like the following.\r\n');
INSERT INTO `service_types` VALUES ('3', 'Music Audio & Show', '2008-12-02 12:41:42', '2008-12-02 12:41:44', 'This is dangerous. Imagine a malicious user manually sending the string \"’OR 1 --’\" as the subject parameter. After Rails substituted this into the SQL it generates for the find method, the resulting statement will look like this.\r\nselect * from emails where owner_id = 123 AND subject = \'\' OR 1 --\'\' \r\nThe OR 1 condition is always true. The two minus signs start an SQL comment;everything after them will be ignored. Our malicious user will get a list of all the e-mails in the database.\r\nProtecting against SQL Injection\r\n');
INSERT INTO `service_types` VALUES ('4', 'Consultant & Training', '2008-12-02 12:42:12', '2008-12-02 12:42:13', 'If you use only the predefined Active Record functions (such as attributes, save,and find), and if you don’t add your own conditions, limits, and SQL when invoking these methods, Active Record takes care of quoting any dangerous characters in the data for you. For example, the following call is safe from SQLinjection attacks. \r\norder =Order.find(params[:id])\r\nEven though the id value comes from the incoming request, the find method takes care of quoting metacharacters. The worst a malicious user could do is to raise a Not Found exception. But if your calls do include conditions, limits, or SQL and if any of the data in these comes from an external source (even indirectly), you have to make sure that this external data does not contain any SQL metacharacters. Some potentially insecure queries include\r\n');
INSERT INTO `services` VALUES ('1', 'Jill Online Game Center', 'There is no universally agreed biological definition of dreaming. General observation shows that dreams are strongly associated with rapid eye movement (REM) sleep, during which an electroencephalogram shows brain activity to be most like wakefulness. Participant-nonremembered dreams during non-REM sleep are normally more mundane in comparison.[1] During a typical lifespan, a human spends a total of about six years dreaming[2] (which is about two hours each night[3]). It is unknown where in the brain dreams originate, if there is a single origin for dreams or if multiple portions of the brain are involved, or what the purpose of dreaming is for the body or mind. It has been hypothesized that dreams are the result of dimethyltryptamine (DMT) in the brain. A biochemical mechanism for this was proposed by the medical researcher J. C. Callaway, who suggested in 1988 that DMT might be connected with visual dream phenomena, where brain DMT levels are periodically elevated to induce visual dreaming and possibly other natural states of mind.[4]\r\n\r\nDuring REM sleep, the release of certain neurotransmitters is completely suppressed. As a result, motor neurons are not stimulated, a condition known as REM atonia. This prevents dreams from resulting in dangerous movements of the body.\r\n\r\n', 'lin', '2007', '3', '2008-12-02 12:51:43', '2008-12-03 11:56:17', '2');
INSERT INTO `services` VALUES ('2', 'Develop Website & Blog System', 'Activation-synthesis\r\nIn 1976, J. Allan Hobson and Robert McCarley proposed a new theory that changed dream research, challenging the previously held Freudian view of dreams as unconscious wishes to be interpreted. The activation synthesis theory asserts that the sensory experiences are fabricated by the cortex as a means of interpreting chaotic signals from the pons. They propose that in REM sleep, the ascending cholinergic PGO (ponto-geniculo-occipital) waves stimulate higher midbrain and forebrain cortical structures, producing rapid eye movements. The activated forebrain then synthesizes the dream out of this internally generated information. They assume that the same structures that induce REM sleep also generate sensory information.\r\n\r\nHobson and McCarley\'s 1976 research suggested that the signals interpreted as dreams originated in the brain stem during REM sleep. However, research by Mark Solms suggests that dreams are generated in the forebrain, and that REM sleep and dreaming are not directly related.[8] While working in the neurosurgery department at hospitals in Johannesburg and London, Solms had access to patients with various brain injuries. He began to question patients about their dreams and confirmed that patients with damage to the parietal lobe stopped dreaming; this finding was in line with Hobson\'s 1977 theory. However, Solms did not encounter cases of loss of dreaming with patients having brain stem damage. This observation forced him to question Hobson\'s prevailing theory which marked the brain stem as the source of the signals interpreted as dreams. Solms viewed the idea of dreaming as a function of many complex brain structures as validating Freudian dream theory, an idea that drew criticism from Hobson.[9] Unhappy about Hobson\'s attempts at discrediting him, Solms, along with partner Edward Nadar, undertook a series of traumatic-injury impact studies using several different species of primates, particularly howler monkeys, in order to more fully understand the role brain damage plays in dream pathology. Solms\' experiments proved inconclusive, however, as the high mortality rate associated with using an hydraulic impact pin to artificially produce brain damage in test subjects meant that his final candidate pool was too small to satisfy the requirements of the scientific method.\r\n\r\n', 'lin', '2008', '1', '2008-12-02 12:51:45', '2008-12-03 11:56:43', '3');
INSERT INTO `services` VALUES ('3', 'Maintain Charles Website', '[edit] Dreams and memory\r\nEugen Tarnow suggests that dreams are ever-present excitations of long-term memory, even during waking life. The strangeness of dreams is due to the format of long-term memory, reminiscent of Penfield and Rasmussen’s findings that electrical excitations of the cortex give rise to experiences similar to dreams. During waking life an executive function interprets long term memory consistent with reality checking. Tarnow\'s theory is a reworking of Freud\'s theory of dreams in which Freud\'s unconscious is replaced with the long-term memory system and Freud\'s “Dream Work” describes the structure of long-term memory.[10]\r\n\r\n', 'lin', '2007', '2', '2008-12-02 12:51:50', '2008-12-03 11:57:13', '1');
INSERT INTO `services` VALUES ('4', 'Updated Real Rock Website', '[edit] Hippocampus and memory\r\nA 2001 study showed evidence that illogical locations, characters, and dream flow may help the brain strengthen the linking and consolidation of semantic memories. These conditions may occur because, during REM sleep, the flow of information between the hippocampus and neocortex is reduced.[11] Increasing levels of the stress hormone cortisol late in sleep (often during REM sleep) cause this decreased communication. One stage of memory consolidation is the linking of distant but related memories. Payne and Nadel hypothesize that these memories are then consolidated into a smooth narrative, similar to a process that happens when memories are created under stress.[12]\r\n\r\n', 'lin', '2008', '2', '2008-12-02 12:51:54', '2008-12-03 11:57:29', '1');
INSERT INTO `services` VALUES ('5', 'Play Portland Cable TV Show', 'There are many hypotheses about the function of dreams, including:[13]\r\n\r\nDuring the night there may be many external stimuli bombarding the senses, but the mind interprets the stimulus and makes it a part of a dream in order to ensure continued sleep.[14] The mind will, however, awaken an individual if they are in danger or if trained to respond to certain sounds, such as a baby crying. \r\nDreams allow the repressed parts of the mind to be satisfied through fantasy while keeping the conscious mind from thoughts that would suddenly cause one to awaken from shock.[15] \r\nFreud suggested that bad dreams let the brain learn to gain control over emotions resulting from distressing experiences.[13] \r\nJung suggested that dreams may compensate for one-sided attitudes held in waking consciousness.[16] \r\nFerenczi[17] proposed that the dream, when told, may communicate something that is not being said outright. \r\nDreams are like the cleaning-up operations of computers when they are off-line, removing parasitic nodes and other \"junk\" from the mind during sleep.[18][19] \r\nDreams create new ideas through the generation of random thought mutations. Some of these may be rejected by the mind as useless, while others may be seen as valuable and retained. Blechner[20] calls this the theory of \"Oneiric Darwinism.\" \r\nDreams regulate mood.[21] \r\n\r\n', 'lin', '2007', '3', '2008-12-02 12:51:57', '2008-12-03 11:57:47', '2');
INSERT INTO `services` VALUES ('6', 'Cooperate Seattle Show', 'Hartmann[22] says dreams may function like psychotherapy, by \"making connections in a safe place\" and allowing the dreamer to integrate thoughts that may be dissociated during waking life. \r\nMore recent research by Griffin has led to the formulation of the \'expectation fulfillment theory of dreaming\', which suggests that dreaming metaphorically completes patterns of emotional expectation and lowers stress levels.[23][24] \r\nCoutts[25] hypothesizes that dreams modify and test mental schemas during sleep during a process he calls emotional selection, and that only schema modifications that appear emotionally adaptive during dream tests are selected for retention, while those that appear maladaptive are abandoned or further modified and tested. \r\nDreams are a product of \"dissociated imagination\", which is dissociated from the conscious self and draws material from sensory memory for simulation, with sensory feedback resulting in hallucination. By simulating the sensory signals to drive the autonomous nerves, dreams can effect mind-body interaction. In the brain and spine, the autonomous \"repair nerves\", which can expand the blood vessels, connect with pain and compression nerves. These nerves are grouped into many chains called meridians in Chinese medicine. While dreaming, the body also employs the chain-reacting meridians to repair the body and help it grow and develop by sending out very intensive movement-compression signals when the level of growth enzymes increase. [26] \r\n\r\n', 'lin', '2008', '3', '2008-12-02 12:52:01', '2008-12-03 11:58:04', '2');
INSERT INTO `services` VALUES ('7', 'CSS Training', '[edit] Dreams and psychosis\r\nA number of thinkers have commented on the similarities between the phenomenology of dreams and that of psychosis. Features common to the two states include thought disorder, flattened or inappropriate affect (emotion), and hallucination. Among philosophers, Kant, for example, wrote that ‘the lunatic is a wakeful dreamer’.[27] Schopenhauer said: ‘A dream is a short-lasting psychosis, and a psychosis is a long-lasting dream.’[28]In the field of psychoanalysis, Freud wrote: ‘A dream then, is a psychosis’,[29]and Jung: ‘Let the dreamer walk about and act like one awakened and we have the clinical picture of dementia praecox.’[30]\r\n\r\nMcCreery[31][32] has sought to explain these similarities by reference to the fact, documented by Oswald,[33] that sleep can supervene as a reaction to extreme stress and hyper-arousal. McCreery adduces evidence that psychotics are people with a tendency to hyper-arousal, and suggests that this renders them prone to what Oswald calls ‘microsleeps’ during waking life. He points in particular to the paradoxical finding of Stevens and Darbyshire[34] that patients suffering from catatonia can be roused from their seeming stupor by the administration of sedatives rather than stimulants.\r\n\r\n', 'lin', '2007', '4', '2008-12-02 12:52:07', '2008-12-03 11:58:23', '2');
INSERT INTO `services` VALUES ('8', 'Ruby and Rails Training', '[edit] Cultural history\r\n \r\nJacob\'s dream of a ladder of angelsDreams have a long history both as a subject of conjecture and as a source of inspiration. Throughout their history, people have sought meaning in dreams or divination through dreams. They have been described physiologically as a response to neural processes during sleep, psychologically as reflections of the subconscious, and spiritually as messages from God or predictions of the future. Many cultures practiced dream incubation, with the intention of cultivating dreams that were prophetic or contained messages from the divine.\r\n\r\nJudaism has a traditional ceremony called hatovat chalom – literally meaning making the dream a good one. Through this rite disturbing dreams can be transformed to give a positive interpretation by a rabbi or a rabbinic court. [35]\r\n\r\n', 'lin', '2008', '4', '2008-12-02 12:52:04', '2008-12-03 11:58:40', '3');
INSERT INTO `services` VALUES ('10', 'Oso\'s System Configrations', '[edit] Popular culture\r\nModern popular culture often conceives of dreams, like Freud, as expressions of the dreamer\'s deepest fears and desires.[36] In films such as Spellbound (1945) or The Manchurian Candidate (1962), the heroes must extract vital clues from surreal dreams.[37]\r\n\r\nMost dreams in popular culture are, however, not symbolic, but straightforward and realistic depictions of their dreamer\'s fears and desires.[37] Dream scenes may be indistinguishable from those set in the dreamer\'s real world, a narrative device that undermines the dreamer\'s and the audience\'s sense of security[37] and allows horror movie protagonists, such as those of Carrie (1976), Friday the 13th (1980) or An American Werewolf in London (1981) to be suddenly attacked by dark forces while resting in seemingly safe places.[37] Ambrose Bierce\'s short story An Occurrence at Owl Creek Bridge (1891) tells of a man sentenced to death escaping the execution and returning to safety, only to wake up and realise that he is in fact about to be hanged.[37]\r\n\r\nIn speculative fiction, the line between dreams and reality may be blurred even more in the service of the story.[37] Dreams may be psychically invaded or manipulated (the Nightmare on Elm Street films, 1984–1991) or even come literally true (as in The Lathe of Heaven, 1971). Such stories play to audiences’ experiences with their own dreams, which feel as real to them as the real world that inspires them.[37]\r\n\r\n', 'lin', '2008', '1', '2008-12-03 12:00:23', '2008-12-03 12:00:23', '2');
INSERT INTO `services` VALUES ('11', 'Updated Charles Website', '[edit] Dream content\r\nFrom the 1940s to 1985, Calvin S. Hall collected more than 50,000 dream reports at Western Reserve University. In 1966 Hall and Van De Castle published The Content Analysis of Dreams in which they outlined a coding system to study 1,000 dream reports from college students.[38] It was found that people all over the world dream of mostly the same things. Hall\'s complete dream reports became publicly available in the mid-1990s by Hall\'s protégé William Domhoff, allowing further different analysis.\r\n\r\nPersonal experiences from the last day or week are frequently incorporated into dreams.[39]\r\n\r\n', 'lin', '2008', '2', '2008-12-03 12:01:31', '2008-12-03 12:01:31', '3');
INSERT INTO `services` VALUES ('12', 'Organize RnR Show', 'Emotions\r\nThe most common emotion experienced in dreams is anxiety. Negative emotions are more common than positive ones.[38] The U.S. ranks the highest amongst industrialized nations for aggression in dreams with 50 percent of U.S. males reporting aggression in dreams, compared to 32 percent for Dutch men.[38]\r\n\r\n\r\n[edit] Sexual content\r\nThe Hall data analysis shows that sexual dreams occur no more than 10 percent of the time and are more prevalent in young to mid teens.[38] Another study showed that 8% of men\'s and women\'s dreams have sexual content.[40] In some cases, sexual dreams may result in orgasm or nocturnal emission. These are commonly known as wet dreams.[41]\r\n\r\n', 'lin', '2008', '3', '2008-12-03 12:02:34', '2008-12-03 12:02:34', '3');
INSERT INTO `services` VALUES ('13', 'MySQL Training', 'Recurring dreams\r\nWhile the content of most dreams is dreamt only once, many people experience recurring dreams—that is, the same dream narrative is experienced over different occasions of sleep. Up to 70% of females and 65% of males report recurrent dreams.[42]\r\n\r\n\r\n[edit] Common themes\r\nContent-analysis studies have identified common reported themes in dreams. These include: situations relating to school, being chased, running slowly in place, experiences, falling, arriving too late, a person now alive being dead, teeth falling out, flying, future events such as birthdays, anniversaries, etc. (with different scenarios), embarrassing moments, falling in love with random people, failing an examination, not being able to move, not being able to focus vision, car accidents, being accused of a crime you didn\'t commit and many more.\r\n\r\n', 'lin', '2007', '4', '2008-12-03 12:03:57', '2008-12-03 12:03:57', '2');
